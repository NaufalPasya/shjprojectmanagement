<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SHJ Project Management Dashboard</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="/css/styles.css">
    <style>

        /* Remove extra space and align the table header with the top */
.container-fluid {
    padding-top: 0; /* Remove any padding at the top */
    margin-top: 0; /* Remove any margin at the top */
}

.table-container {
    padding-top: 0;
    margin-top: 0; /* Make sure the table aligns flush with the container top */
}

/* Remove any potential spacing above the table header */
.table {
    margin-top: 0; /* Remove any default margin on the table */
}
.table-active {
    background-color: #f2f2f2; /* Light gray background for the selected row */
}

thead th {
    background-color: #fff; /* Solid background for readability */
    position: relative; /* Ensure alignment without any gap */
    top: 0; /* Ensures the header aligns at the top */
    padding-top: 0; /* Remove extra padding in the header if any */
}

/* Reduce or remove margin and padding for the buttons above */
.d-flex.justify-content-end.align-items-center.my-3 {
    margin-bottom: 0; /* Remove space below the buttons container */
}

        th,
        td {
            text-align: center;
            /* Ensure padding and spacing don't make it look too compressed */
            padding: 12px;
        }

        /* For action buttons */
        .btn-view {
            color: #007bff;
        }

        .btn-edit {
            color: #ffc107;
        }

        .btn-delete {
            color: #dc3545;
        }

        /* Align status badges */
        .status-badge {
            font-size: 0.85em;
        }
    </style>
</head>

<body>
    <div class="container-fluid">
        <h1 class="my-4">SHJ Project Management Dashboard</h1>



        <div class="table-container table-responsive">
            <!-- Button Container for Add New Project and Manage Project Buttons -->
            <div class="d-flex justify-content-end align-items-center my-3">

                <input type="text" id="filterIdInput" class="form-control mr-3" placeholder="Filter by ID" style="max-width: 200px;">
                <input type="text" id="filterInput" class="form-control mr-3" placeholder="Filter by Customer"style="max-width: 200px;"> 
                <select id="statusFilter" class="form-control mr-3" style="max-width: 150px;">
                    <option value="">Filter by Status</option>
                    <option value="Active">Active</option>
                    <option value="Sailing">Sailing</option>
                    <option value="Planning">Planning</option>
                    <option value="On Hold">On Hold</option>
                    <option value="Completed">Completed</option>
                </select>

                <!-- Payment Status Filter Dropdown -->
                <select id="invoiceStatusFilter" class="form-control mr-3" style="max-width: 150px;">
                    <option value="">Filter by Invoice</option>
                    <option value="Not Yet">Not Yet</option>
                    <option value="Document Sent to Finance">Document Sent to Finance</option>
                    <option value="Complete">Complete</option>
                </select>

                <button type="button" class="btn btn-primary mr-2" data-toggle="modal" data-target="#projectModal"
                    onclick="clearForm()">
                    Add New Project
                </button>
                <button type="button" class="btn btn-primary" id="manageProjectBtn" disabled>
                    Manage Project
                </button>                
                <button type="button" class="btn btn-success ml-2" data-toggle="modal"
                    data-target="#columnSelectionModal">
                    Download Excel
                </button>

            </div>

            
            <table class="table table-bordered table-hover w-100">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Customer</th>
                        <th>Description</th>
                        <th>Start Date</th>
                        <th>End Date</th>
                        <th>Status</th>
                        <th>Invoice Date</th>
                        <th>Invoice Status</th>  
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <% projects.forEach(project=> { %>
                        <tr data-project-id="<%= project.id %>">
                            <!-- Radio button for selection -->
                            <td>
                                <%= project.id %>
                            </td>
                            <td>
                                <%= project.customer %>
                            </td>
                            <td class="truncate-text">
                                <%= project.description %>
                            </td>
                                <td>
                                    <%= project.startDate %>
                                </td>
                                <td>
                                    <%= project.endDate %>
                                </td>
                                <td>
                                    <span class="badge <%= project.status === 'Active' ? 'badge-success' : 
                                            project.status === 'Planning' ? 'badge-secondary' : 
                                            project.status === 'On Hold' ? 'badge-warning' : 
                                            project.status === 'Sailing' ? 'badge-primary' : 
                                            'badge-info' %>">
                                        <%= project.status %>
                                    </span>
                                    </td>
                                    <td>
                                        <%= project.invoiceDate %>
                                    </td>
                                <td>
                                    <span class="badge <%= project.invoiceStatus === 'Complete' ? 'badge-success' : 
                                                            project.invoiceStatus === 'Document Sent to Finance' ? 'badge-warning' : 
                                                            'badge-danger' %>"> 
                                        <%= project.invoiceStatus || "N/A" %>
                                    </span>
                                </td>
                                
                            <td>
                                <button type="button" class="btn btn-info btn-sm" data-toggle="modal"
                                    data-target="#viewModal<%= project.id %>">View</button>
                            </td>
                        </tr>




                        <!-- View Modal -->
                        <div class="modal fade" id="viewModal<%= project.id %>" tabindex="-1" role="dialog"
                            aria-labelledby="viewModalLabel" aria-hidden="true">
                            <div class="modal-dialog" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="viewModalLabel">Project Details - <%= project.customer
                                                %>
                                        </h5>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <div class="modal-body">
                                        <h5>Project Info</h5>
                                        <ul class="list-group mb-4">
                                            <li class="list-group-item"><strong>ID:</strong>
                                                <%= project.id %>
                                            </li>
                                            <li class="list-group-item">
                                                <strong>Status:</strong> 
                                                <span class="badge <%= project.status === 'Active' ? 'badge-success' : 
                                                        project.status === 'Planning' ? 'badge-secondary' : 
                                                        project.status === 'On Hold' ? 'badge-warning' : 
                                                        project.status === 'Sailing' ? 'badge-primary' : 
                                                        'badge-info' %>">
                                                    <%= project.status %>
                                                </span>
                                            </li>
                                            <li class="list-group-item"><strong>Description:</strong>
                                                <%= project.description %>
                                            </li>
                                            <li class="list-group-item"><strong>Start Date:</strong>
                                                <%= project.startDate %>
                                            </li>
                                            <li class="list-group-item"><strong>End Date:</strong>
                                                <%= project.endDate %>
                                            </li>
                                            <li class="list-group-item">
                                                <strong>Invoice Status:</strong>
                                                <span class="badge <%= project.invoiceStatus === 'Document Sent to Finance' ? 'badge-info' : 
                                                        project.invoiceStatus === 'Complete' ? 'badge-success' : 
                                                        'badge-secondary' %>">
                                                    <%= project.invoiceStatus %>
                                                </span>
                                            </li>
                                            <li class="list-group-item"><strong>Invoice Date:</strong> <%= project.invoiceDate || "N/A" %></li>
                                            <li class="list-group-item"><strong>PO Number:</strong>
                                                <%= project.poNumber || "N/A" %>
                                            </li>
                                            <li class="list-group-item"><strong>Vendor Name:</strong>
                                                <%= project.vendorName || "N/A" %>
                                            </li>
                                            <li class="list-group-item"><strong>Quantity:</strong>
                                                 <%= project.quantity || "N/A" %>
                                                </li>
                                                <li class="list-group-item">
                                                    <strong>Status Payment:</strong> 
                                                    <span class="badge <%= project.statusPayment === 'Paid' ? 'badge-success' : 
                                                            project.statusPayment === 'Not Paid' ? 'badge-warning' : 
                                                            project.statusPayment === 'Overdue' ? 'badge-danger' : 
                                                            'badge-secondary' %>">
                                                        <%= project.statusPayment %>
                                                    </span>
                                                </li>
                                            <li class="list-group-item"><strong>Due Date:</strong>
                                                <%= project.dueDate || "N/A" %>
                                            </li>
                                        </ul>

                                        <h5>Tasks</h5>
                                        <% if (project.tasks && project.tasks.length> 0) { %>
                                            <ul class="list-group">
                                                <% project.tasks.forEach(task=> { %>
                                                    <li class="list-group-item">
                                                        <strong>
                                                            <%= task.name %>
                                                        </strong> -
                                                        <span class="badge <%= task.status === 'Done' ? 'badge-success' : 
                                                                task.status === 'In Progress' ? 'badge-info' : 
                                                                task.status === 'Pending' ? 'badge-warning' : 
                                                                task.status === 'Approval' ? 'badge-primary' : 
                                                                'badge-secondary' %>">
                                                            <%= task.status %>
                                                        </span>
                                                    </li>
                                                    <% }) %>
                                            </ul>
                                            <% } else { %>
                                                <p>No tasks assigned.</p>
                                                <% } %>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary"
                                            data-dismiss="modal">Close</button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <% }) %>
                </tbody>
            </table>
        </div>
    </div>



    <!-- Add/Edit Project Modal -->
    <div class="modal fade" id="projectModal" tabindex="-1" role="dialog" aria-labelledby="projectModalLabel"
        aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="projectModalLabel">Add/Edit Project</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="projectForm" action="/add-project" method="POST">
                        <input type="hidden" name="id" id="projectId">

                        <div class="form-group">
                            <label for="customer">Customer</label>
                            <input type="text" class="form-control" id="customer" name="customer" required>
                        </div>
                        
                        <div class="form-group">
                            <label for="description">Description</label>
                            <textarea class="form-control" id="description" name="description" rows="3"
                                required></textarea>
                        </div>
                        <div class="form-group">
                            <label for="status">Status</label>
                            <select class="form-control" id="status" name="status">
                                <option value="Active">Active</option>
                                <option value="Sailing">Sailing</option>
                                <option value="Planning">Planning</option>
                                <option value="On Hold">On Hold</option>
                                <option value="Completed">Completed</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="startDate">Start Date</label>
                            <input type="date" class="form-control" id="startDate" name="startDate" required>
                        </div>
                        <div class="form-group">
                            <label for="endDate">End Date</label>
                            <input type="date" class="form-control" id="endDate" name="endDate" required>
                        </div>
                        <div class="form-group">
                            <label for="invoiceStatus">Invoice Status</label>
                            <select class="form-control" id="invoiceStatus" name="invoiceStatus">
                                <option value="Not Yet">Not Yet</option>
                                <option value="Document Sent to Finance">Document Sent to Finance</option>
                                <option value="Complete">Complete</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="invoiceDate">Invoice Date</label>
                            <input type="date" class="form-control" id="invoiceDate" name="invoiceDate">
                        </div>                        
                        <div class="form-group">
                            <label for="poNumber">PO Number</label>
                            <input type="text" class="form-control" id="poNumber" name="poNumber">
                        </div>
                        <div class="form-group">
                            <label for="vendorName">Vendor Name</label>
                            <input type="text" class="form-control" id="vendorName" name="vendorName">
                        </div>

                        <div class="form-group">
                            <label for="quantity">Quantity</label>
                            <input type="number" class="form-control" id="quantity" name="quantity" min="1">
                        </div>
                        

                        <div class="form-group">
                            <label for="statusPayment">Status Payment</label>
                            <select class="form-control" id="statusPayment" name="statusPayment">
                                <option value="Not Paid">Not Paid</option>
                                <option value="Paid">Paid</option>
                                <option value="Overdue">Overdue</option>
                            </select>
                        </div>

                        <div class="form-group">
                            <label for="dueDate">Due Date</label>
                            <input type="date" class="form-control" id="dueDate" name="dueDate">
                        </div>




                        <!-- Tasks Section -->
                        <h5>Tasks</h5>
                        <div id="tasks">
                            <div class="task-item mb-3">
                                <div class="form-group">
                                    <label for="taskName">Task Name</label>
                                    <input type="text" class="form-control" name="taskName[]" required>
                                </div>
                                <div class="form-group">
                                    <label for="taskStatus">Task Status</label>
                                    <select class="form-control" name="taskStatus[]">
                                        <option value="To Do">To Do</option>
                                        <option value="In Progress">In Progress</option>
                                        <option value="Pending">Pending</option>
                                        <option value="Approval">Approval</option>
                                        <option value="Done">Done</option>
                                    </select>
                                </div>
                                <button type="button" class="btn btn-danger remove-task">Remove Task</button>
                            </div>
                        </div>

                        <!-- Button Container for Add Task and Submit -->
                        <div id="button-container">
                            <button type="button" class="btn btn-secondary" id="addTaskBtn">Add Task</button>
                            <button type="submit" class="btn btn-primary">Submit</button>
                            <button type="button" class="btn btn-danger" id="deleteProjectBtn">Delete</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
    </div>

    <!-- Column Selection Modal -->
    <div class="modal fade" id="columnSelectionModal" tabindex="-1" role="dialog" aria-labelledby="columnSelectionLabel"
        aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="columnSelectionLabel">Select Columns to Download</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="columnSelectionForm">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" value="ID" id="colID" checked>
                            <label class="form-check-label" for="colID">ID</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" value="Customer" id="colCustomer" checked>
                            <label class="form-check-label" for="colCustomer">customer</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" value="Description" id="colDescription"
                                checked>
                            <label class="form-check-label" for="colDescription">Description</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" value="Status" id="colStatus" checked>
                            <label class="form-check-label" for="colStatus">Status</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" value="Vendor Name" id="colVendor" checked>
                            <label class="form-check-label" for="colVendor">Vendor Name</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" value="Status Payment" id="colPaymentStatus"
                                checked>
                            <label class="form-check-label" for="colPaymentStatus">Status Payment</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" value="Due Date" id="colDueDate" checked>
                            <label class="form-check-label" for="colDueDate">Due Date</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" value="PO Number" id="colPONumber" checked>
                            <label class="form-check-label" for="colPONumber">PO Number</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" value="Quantity" id="colQuantity" checked>
                            <label class="form-check-label" for="colQuantity">Quantity</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" value="Start Date" id="colStartDate" checked>
                            <label class="form-check-label" for="colStartDate">Start Date</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" value="End Date" id="colEndDate" checked>
                            <label class="form-check-label" for="colEndDate">End Date</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" value="Invoice Status" id="colInvoiceStatus" checked>
                            <label class="form-check-label" for="colInvoiceStatus">Invoice Status</label>
                        </div>

                        
                        
                        
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" onclick="downloadSelectedColumns()">Download</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Include Bootstrap JS, Popper.js, and jQuery -->
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.16.9/xlsx.full.min.js"></script>

    <script>
        // Reset the form when adding a new project
        function clearForm() {
            $('#projectForm')[0].reset();
            $('#projectId').val('');
            $('#tasks').empty();  // Clear tasks section
        }

        // Function to populate form with selected project data for editing
        function editProject(project) {
            $('#projectId').val(project.id);
            $('#customer').val(project.customer);
            $('#description').val(project.description);
            $('#status').val(project.status);
            $('#startDate').val(project.startDate);
            $('#endDate').val(project.endDate);
            $('#invoiceStatus').val(project.invoiceStatus || "Not Yet"); // Default to "Not Yet" 
            $('#invoiceDate').val(project.invoiceDate); 
            $('#poNumber').val(project.poNumber || "");
            $('#vendorName').val(project.vendorName || ""); // Populate Vendor Name
            $('#dueDate').val(project.dueDate || ""); // Populate Due Date
            $('#statusPayment').val(project.statusPayment || "Not Paid"); // Populate Status Payment
            $('#quantity').val(project.quantity || ""); // Populate Quantity

            // Clear existing tasks
            $('#tasks').empty();

            // Check if project has tasks
            if (project.tasks && project.tasks.length > 0) {
                project.tasks.forEach(task => {
                    // Create a new task input group dynamically
                    const taskItem = `
                <div class="task-item mb-3">
                    <div class="form-group">
                        <label for="taskName">Task Name</label>
                        <input type="text" class="form-control" name="taskName[]" value="${task.name}" required>
                    </div>
                    <div class="form-group">
                        <label for="taskStatus">Task Status</label>
                        <select class="form-control" name="taskStatus[]">
                            <option value="To Do" ${task.status === 'To Do' ? 'selected' : ''}>To Do</option>
                            <option value="In Progress" ${task.status === 'In Progress' ? 'selected' : ''}>In Progress</option>
                            <option value="Pending" ${task.status === 'Pending' ? 'selected' : ''}>Pending</option>
                            <option value="Approval" ${task.status === 'Approval' ? 'selected' : ''}>Approval</option>
                            <option value="Done" ${task.status === 'Done' ? 'selected' : ''}>Done</option>
                        </select>
                    </div>
                    <button type="button" class="btn btn-danger remove-task">Remove Task</button>
                </div>
            `;
            $('#tasks').append(taskItem);
        });
    }
}

        // Function to add a new empty task input (useful for both new project and editing empty task list)
        function addNewTask() {
            const taskItem = `
        <div class="task-item mb-3">
            <div class="form-group">
                <label for="taskName">Task Name</label>
                <input type="text" class="form-control" name="taskName[]" required>
            </div>
            <div class="form-group">
                <label for="taskStatus">Task Status</label>
                <select class="form-control" name="taskStatus[]">
                    <option value="To Do">To Do</option>
                    <option value="In Progress">In Progress</option>
                    <option value="Pending">Pending</option>
                    <option value="Approval">Approval</option>
                    <option value="Done">Done</option>
                </select>
            </div>
            <button type="button" class="btn btn-danger remove-task">Remove Task</button>
        </div>
    `;
            $('#tasks').append(taskItem);
        }

        // Add Task button handler
        document.getElementById('addTaskBtn').addEventListener('click', function () {
            addNewTask();
        });

        // Remove Task button handler
        $(document).on('click', '.remove-task', function () {
            $(this).closest('.task-item').remove();
        });

        document.getElementById('deleteProjectBtn').addEventListener('click', function () {
            const projectId = document.getElementById('projectId').value;

            if (!projectId) {
                alert("No project selected for deletion.");
                return;
            }

            const confirmation = confirm("Are you sure you want to delete this project?");

            if (confirmation) {
                window.location.href = `/delete-project/${projectId}`;
            }
        });

        let selectedProjectId = null;
let selectedRow = null;

function selectProject(projectId, row) {
    // Deselect the previous row if any
    if (selectedRow) {
        selectedRow.classList.remove("table-active");
    }

    // Select the new row
    selectedProjectId = projectId;
    selectedRow = row;
    selectedRow.classList.add("table-active");

    // Enable the Manage Project button
    document.getElementById("manageProjectBtn").disabled = false;
}

// Modify the Manage Project button click to use the selected project ID
document.getElementById("manageProjectBtn").addEventListener("click", function () {
    if (selectedProjectId) {
        // Fetch project data for editing
        $.get(`/view-project/${selectedProjectId}`, function (data) {
            editProject(data); // Populate the edit modal with the selected project data
            $('#projectModal').modal('show'); // Show the edit modal
        }).fail(function () {
            alert("Failed to retrieve project data.");
        });
    } else {
        alert("Please select a project to manage.");
    }
});

        // Filter projects by name
        document.getElementById('filterInput').addEventListener('input', function () {
            const filterValue = this.value.toLowerCase();
            const rows = document.querySelectorAll('tbody tr');

            rows.forEach(row => {
                const nameCell = row.querySelector('td:nth-child(2)'); // Adjust if Name column position changes
                if (nameCell) {
                    const nameText = nameCell.textContent.toLowerCase();
                    if (nameText.includes(filterValue)) {
                        row.style.display = ''; // Show row if it matches filter
                    } else {
                        row.style.display = 'none'; // Hide row if it doesn't match filter
                    }
                }
            });
        });


        // Filter function to apply all filters to the table
        function applyFilters() {
            const filterIdValue = document.getElementById('filterIdInput').value.toLowerCase();
            const filterValue = document.getElementById('filterInput').value.toLowerCase();
            const statusFilter = document.getElementById('statusFilter').value;
            const invoiceStatusFilter = document.getElementById('invoiceStatusFilter').value;
            const rows = document.querySelectorAll('tbody tr');

            rows.forEach(row => {
                const idCell = row.querySelector('td:nth-child(1)');
                const nameCell = row.querySelector('td:nth-child(2)');
                const statusCell = row.querySelector('td:nth-child(6)');
                const invoiceStatusCell = row.querySelector('td:nth-child(8)');

                let isVisible = true;

                 // Filter by ID
                if (idCell && filterIdValue) {
                const idText = idCell.textContent.toLowerCase();
                isVisible = isVisible && idText.includes(filterIdValue);
                }

                // Filter by project name (search)
                if (nameCell && filterValue) {
                    const nameText = nameCell.textContent.toLowerCase();
                    isVisible = isVisible && nameText.includes(filterValue);
                }

                // Filter by status
                if (statusCell && statusFilter) {
                    const statusText = statusCell.textContent.trim();
                    isVisible = isVisible && statusText === statusFilter;
                }

                // Filter by payment status
                if (invoiceStatusCell && invoiceStatusFilter) {
                    const invoiceStatusText = invoiceStatusCell.textContent.trim();
                    isVisible = isVisible && invoiceStatusText === invoiceStatusFilter;
                }


                row.style.display = isVisible ? '' : 'none';
            });
        }

        // Event listeners for search and filter fields
        document.getElementById('filterIdInput').addEventListener('input', applyFilters);
        document.getElementById('filterInput').addEventListener('input', applyFilters);
        document.getElementById('statusFilter').addEventListener('change', applyFilters);
        document.getElementById('invoiceStatusFilter').addEventListener('change', applyFilters);

    function downloadSelectedColumns() {
    console.log("Starting download process...");

    // Fetch all projects data from the server
    $.get('/get-projects', function(allProjects) {
        console.log("Data fetched:", allProjects);

        // Get selected columns from checkboxes
        const selectedColumns = [];
        const form = document.getElementById('columnSelectionForm');
        form.querySelectorAll('input[type="checkbox"]:checked').forEach(checkbox => {
            selectedColumns.push(checkbox.value);
        });

        // Map column names to project properties
        const columnMap = {
            "ID": "id",
            "Customer": "customer",
            "Description": "description",
            "Status": "status",
            "Vendor Name": "vendorName",
            "Status Payment": "statusPayment",
            "Due Date": "dueDate",
            "PO Number": "poNumber",
            "Quantity": "quantity",
            "Start Date": "startDate",  // New entry
            "End Date": "endDate",       // New entry
            "Invoice Status": "invoiceStatus",
            "Invoice Date": "invoiceDate"  
        };

        // Apply any filters to export only relevant rows
        const filterIdValue = document.getElementById('filterIdInput').value.toLowerCase();
        const filterValue = document.getElementById('filterInput').value.toLowerCase();
        const statusFilter = document.getElementById('statusFilter').value;
        const invoiceStatusFilter = document.getElementById('invoiceStatusFilter').value;

        const filteredData = allProjects.filter(project => {
            let matches = true;

            if (filterIdValue && !project.id.toLowerCase().includes(filterIdValue)) {
            matches = false;
            }

            if (filterValue && !project.customer.toLowerCase().includes(filterValue)) {
                matches = false;
            }
            if (statusFilter && project.status !== statusFilter) {
                matches = false;
            }
            if (invoiceStatusFilter && project.invoiceStatus !== invoiceStatusFilter) {
                matches = false;
            }
            return matches;
        });

        // Prepare data for Excel export
        const data = [];
        const headerRow = selectedColumns;
        data.push(headerRow);

        filteredData.forEach(project => {
            const row = selectedColumns.map(col => project[columnMap[col]] || "N/A");
            data.push(row);
        });

        console.log("Data to export:", data); // Log data before exporting

        // Create worksheet and workbook
        const worksheet = XLSX.utils.aoa_to_sheet(data);
        const workbook = XLSX.utils.book_new();
        XLSX.utils.book_append_sheet(workbook, worksheet, "Project Data");

        // Export workbook to Excel
        XLSX.writeFile(workbook, "Filtered_Project_Data.xlsx");

        // Close the modal
        $('#columnSelectionModal').modal('hide');
    }).fail(function() {
        alert("Failed to retrieve project data.");
    });
}

    function formatDate(dateString) {
        const [year, month, day] = dateString.split('-');
        return `${day}-${month}-${year}`;
    }

    $(document).ready(function() {
    $("tr").click(function() {
        const projectId = $(this).data("project-id");
        selectProject(projectId, this);
    });
});



    </script>


</body>

</html>